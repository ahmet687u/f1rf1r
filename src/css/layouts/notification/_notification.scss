@use "../../abstracts/variables" as *;
@use "../../abstracts/res" as *;
@use "../../base/animate.scss" as *;
@use "./alerts.scss" as *;
@use "../../abstracts/helper.scss" as *;

$type_list: (error, success, info, warning);
$animate_list: (show, fadeIn, fadeOut, hide);
$position_list: ("top-right", "top-left", "bottom-right", "bottom-left");

.f1rf1r-notification-container {
  position: fixed;
  z-index: 999999999999;
  pointer-events: none;
  font-family: "Open-Sans", sans-serif;
  font-size: var(--fırfır-font-size);

  //--- Mesajların seçili pozisyona göre ekrandaki konumlarını belirleyecek classları oluşturuyoruz
  @each $key, $value in $positions {
    &[data-fırfır-item-direction="#{$key}"] {
      @for $index from 1 through 2 {
        #{nth(str-split($key, "-"), $index)}: map-get($positions, $key, nth(str-split($key, "-"), $index));
      }
    }
  }

  [class^="fırfır-"] {
    @extend %create_f1rf1r;
    
    @for $i from 1 through length($animate_list) {
      &.#{nth($animate_list, $i)} {
        animation-name: #{nth($animate_list, $i)};
      }
    }
  }

  //--- Farklı tiplerde olacak olan mesajları oluşturuyoruz
  @for $j from 1 through length($type_list) {
    .fırfır-#{nth($type_list, $j)} {
      @include create_f1rf1r_type(nth($type_list, $j));
    }
  }

  [data-fırfır-direction="right"] {
    [class^="fırfır-"] {
      justify-content: flex-end;
  
      svg {
        order: 1;
      }
  
      p {
        flex: 1;
      }
  
      &::before {
        left: auto;
        right: 0;
        border-radius: 0;
        border-top-right-radius: 5px;
        border-bottom-right-radius: 5px;
      }
    }
  }
}
